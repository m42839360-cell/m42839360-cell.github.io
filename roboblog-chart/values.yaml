# Default values for roboblog
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Image configuration for Jekyll builder
image:
  repository: registry.gitlab.com/maluma/m42839360-cell.github.io
  pullPolicy: IfNotPresent
  tag: "v1.0.0"

imagePullSecrets: [
  name: image-pull-secret
]
nameOverride: ""
fullnameOverride: ""

# PersistentVolumeClaim for shared _site directory
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}

# CronJob configuration for Jekyll build
cronjob:
  enabled: true
  schedule: "0 * * * *"  # Build every hour
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  restartPolicy: OnFailure
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Nginx deployment for serving static files
nginx:
  replicaCount: 1
  image:
    repository: nginx
    tag: "1.25-alpine"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  # Custom nginx configuration (optional)
  config: |
    server {
      listen 80;
      server_name _;
      root /usr/share/nginx/html;
      index index.html;

      location / {
        try_files $uri $uri/ =404;
      }

      # Enable gzip compression
      gzip on;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: roboblog.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: roboblog-tls
  #    hosts:
  #      - roboblog.example.com

# Pod Security Context
podSecurityContext:
  fsGroup: 2000

# Container Security Context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

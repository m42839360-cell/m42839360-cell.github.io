name: Automated Blog Post Generation

on:
  # Run weekly on Monday at 9 AM UTC
  schedule:
    - cron: '0 9 * * 1'

  # Allow manual trigger with optional parameters
  workflow_dispatch:
    inputs:
      lookback_days:
        description: 'Number of days to look back for commits (default: 7)'
        required: false
        type: number
        default: 7
      force_generate:
        description: 'Force post generation even with few commits'
        required: false
        type: boolean
        default: false

# Grant write permissions to commit and push changes
permissions:
  contents: write

jobs:
  generate-blog-post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate commit tracking

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install uv package manager
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Verify uv installation
        run: uv --version

      - name: Configure Git
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch commits from GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LOOKBACK_DAYS: ${{ inputs.lookback_days || 7 }}
        run: |
          echo "Fetching commits from GitHub API..."
          ./scripts/fetch_commits.py --config config.yml --output data/commits.json

          # Check if commits were found
          if [ -f data/commits.json ]; then
            COMMIT_COUNT=$(jq -r '.total_commits // 0' data/commits.json)
            echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV
            echo "Found $COMMIT_COUNT commits"
          else
            echo "COMMIT_COUNT=0" >> $GITHUB_ENV
            echo "No commits data file generated"
          fi

      - name: Check if post generation should proceed
        id: check_commits
        run: |
          FORCE_GENERATE="${{ inputs.force_generate }}"

          if [ "$COMMIT_COUNT" -eq 0 ]; then
            echo "should_generate=false" >> $GITHUB_OUTPUT
            echo "skip_reason=No commits found in the specified time period" >> $GITHUB_OUTPUT
          elif [ "$COMMIT_COUNT" -lt 3 ] && [ "$FORCE_GENERATE" != "true" ]; then
            echo "should_generate=false" >> $GITHUB_OUTPUT
            echo "skip_reason=Only $COMMIT_COUNT commits found (minimum: 3). Use force_generate to override." >> $GITHUB_OUTPUT
          else
            echo "should_generate=true" >> $GITHUB_OUTPUT
            echo "skip_reason=" >> $GITHUB_OUTPUT
          fi

      - name: Generate blog post
        if: steps.check_commits.outputs.should_generate == 'true'
        env:
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Generating blog post with LLM..."
          ./scripts/generate_post.py --config config.yml --input data/commits.json

          # Check if a new post was created
          NEW_POST=$(git status --porcelain _posts/ | grep "^??" | head -1 || echo "")
          if [ -n "$NEW_POST" ]; then
            POST_FILE=$(echo "$NEW_POST" | awk '{print $2}')
            echo "NEW_POST_FILE=$POST_FILE" >> $GITHUB_ENV
            echo "Generated new post: $POST_FILE"
          else
            echo "NEW_POST_FILE=" >> $GITHUB_ENV
            echo "No new post file detected"
          fi

      - name: Commit and push new post
        if: steps.check_commits.outputs.should_generate == 'true' && env.NEW_POST_FILE != ''
        run: |
          echo "Committing new blog post..."

          # Add the new post and updated tracking files
          git add _posts/
          git add .last_build

          # Create commit message
          POST_FILENAME=$(basename "$NEW_POST_FILE")
          git commit -m "Add automated blog post: $POST_FILENAME

Generated from $COMMIT_COUNT commits using GitHub Actions.

🤖 Generated with [Claude Code](https://claude.com/claude-code)

Co-Authored-By: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

          # Push changes
          git push

          echo "✅ Successfully published new blog post: $POST_FILENAME"

      - name: Workflow summary
        if: always()
        run: |
          echo "# Blog Post Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_commits.outputs.should_generate }}" == "false" ]; then
            echo "## ⏭️ Post Generation Skipped" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Reason:** ${{ steps.check_commits.outputs.skip_reason }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Details" >> $GITHUB_STEP_SUMMARY
            echo "- Commits found: $COMMIT_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- Minimum required: 3" >> $GITHUB_STEP_SUMMARY
            echo "- Force generate: ${{ inputs.force_generate || 'false' }}" >> $GITHUB_STEP_SUMMARY
          elif [ -n "$NEW_POST_FILE" ]; then
            echo "## ✅ Blog Post Published Successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Details" >> $GITHUB_STEP_SUMMARY
            echo "- Post file: \`$NEW_POST_FILE\`" >> $GITHUB_STEP_SUMMARY
            echo "- Commits processed: $COMMIT_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- Trigger: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The new post has been committed and pushed to the repository." >> $GITHUB_STEP_SUMMARY
            echo "GitHub Pages will automatically rebuild and publish the site." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⚠️ Post Generation Completed Without Output" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Post generation ran but no new file was created." >> $GITHUB_STEP_SUMMARY
            echo "This may indicate an issue with the generation script." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Commits found: $COMMIT_COUNT" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- Lookback days: ${{ inputs.lookback_days || 7 }}" >> $GITHUB_STEP_SUMMARY
          echo "- Python version: 3.11" >> $GITHUB_STEP_SUMMARY
          echo "- Runner: ubuntu-latest" >> $GITHUB_STEP_SUMMARY

      - name: Report failure
        if: failure()
        run: |
          echo "# ❌ Workflow Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The blog post generation workflow encountered an error." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Troubleshooting Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **Check Secrets:** Verify LLM_API_KEY is set in repository secrets" >> $GITHUB_STEP_SUMMARY
          echo "2. **Check Logs:** Review the step logs above for specific error messages" >> $GITHUB_STEP_SUMMARY
          echo "3. **Verify Config:** Ensure config.yml has correct LLM provider settings" >> $GITHUB_STEP_SUMMARY
          echo "4. **API Status:** Check if your LLM provider API is operational" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Common Issues" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **API key not found:** Add LLM_API_KEY to Settings → Secrets → Actions" >> $GITHUB_STEP_SUMMARY
          echo "- **Invalid API key:** Regenerate key from your LLM provider" >> $GITHUB_STEP_SUMMARY
          echo "- **Rate limiting:** GitHub token may need higher permissions" >> $GITHUB_STEP_SUMMARY
          echo "- **Script errors:** Check if scripts run locally with \`./scripts/run_blog_update.py\`" >> $GITHUB_STEP_SUMMARY
